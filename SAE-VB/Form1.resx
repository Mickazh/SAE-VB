<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wC8J6s4hGgmegAAAABJRU5ErkJggg==
</value>
  </data>
</root>